Structure of the Program
=====================================

Before get start, I highly recommend you get familiar with the Modified Node Analysis (MNA) algorithm first. If you have never heard it before, refer to this book could be a choice. 

Generally Speaking, the method computer used to simulate circuit is to transform the problem of solving for a state of the circuit into the problem of solving matrix equation. And there are mature methods in linear algebra to deal with the later. So the difficulty to this program lies in the transformation process. 

In the realization of this project, I divided this process into three phases, and developed a package to realize the functionality in each phase. The first package is the *parser* package. During this phase, the program read in the SPICE Netlist, extract the information about the circuit and the analysis commands. And store them in internal data structures. At this phase, some basic information regarding the circuit is also collected, like how many nodes the circuit possess and how many variable should be assigned to determine the circuit's final state. 

During the next phase, the *solver* package using the information to construct MNA, a matrix and RHS, a vector. The two together represent the original circuit and constitute a matrix equation. The final state can be obtained by solving this equation. 

At this phase, different kinds of analysis are abstracted in a uniformed model. This model is represent by the core sub-module *engine*. Basically, all kinds of analysis can be constituted by two basic operations: the *iterate* operation and the *converge control* operation. While doing an certain analysis, we are solving the circuit on a sequence of consecutive states. The job of changing some parameters to represents these states is the job of the iterate operation. And in solving for each states. Converge issue may arise, that means you need to change some parameter and solve the matrix equation several times to make sure the final solution you get is the real state of the circuit. This falls in the responsibility of the converge control operation. The design of the Engine module are illustrated in figure x.x

.. figure:: ../figures/engine.png

The final package is relatively simple. The solution generated by *solver* phase is the internal representation of the states of the circuit. The last package, called exhibitor is designed to using these 'raw' data to generate the data needed by the user. When necessary, this package can visualize the result by plotting the waveform. 

The working flow of this project is depicted in figure x.x

.. figure:: ../figures/workflow.png 
